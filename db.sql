CREATE TABLE REZEPT (
    REZEPTID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(150) NOT NULL,
    URHEBER VARCHAR(100),
    GEAENDERT_AM DATETIME ON UPDATE CURRENT_TIMESTAMP,
    ERSTELLT_AM DATETIME DEFAULT CURRENT_TIMESTAMP,
    ANLEITUNG TEXT,
    PORTIONEN INT DEFAULT 1,
    ZUBEREITUNGSZEIT INT,
    ERNAEHRUNGSKATEGORIE VARCHAR(20)
);

CREATE TABLE ERNAEHRUNGSKATEGORIE (
    ERNAEHRUNGSKATEGORIEID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(50) UNIQUE
);

CREATE TABLE REZEPT_ERNAEHERUNGSKATEGORIE (
    REZEPTID INT NOT NULL,
    ERNAEHRUNGSKATEGORIEID INT NOT NULL,
    PRIMARY KEY (REZEPTID, ERNAEHRUNGSKATEGORIEID),
    FOREIGN KEY (REZEPTID) REFERENCES REZEPT(REZEPTID) ON DELETE CASCADE,
    FOREIGN KEY (ERNAEHRUNGSKATEGORIEID) REFERENCES ERNAEHRUNGSKATEGORIE(ERNAEHRUNGSKATEGORIEID) ON DELETE CASCADE
);

CREATE TABLE ZUTAT (
    ZUTATENID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(150) NOT NULL,
    KATEGORIE VARCHAR(10) NOT NULL, --???
    GROESSE INT NOT NULL,
    LAGERMENGE INT,
    EINHEIT VARCHAR(6) NOT NULL, -- l, ml, g, mg, Anzahl
    PREIS_EINHEIT INT NOT NULL
);

CREATE TABLE LIEFERANT_ZUTAT (
    ZUTATENID INT NOT NULL,
    LIEFERANTENID INT NOT NULL,
    PRIMARY KEY (ZUTATENID, LIEFERANTENID),
    FOREIGN KEY (LIEFERANTENID) REFERENCES LIEFERANT(LIEFERANTENID) ON DELETE RESTRICT,
    FOREIGN KEY (ZUTATENID) REFERENCES ZUTAT(ZUTATENDID) ON DELETE CASCADE
);

CREATE TABLE ZUTAT_NAEHRWERT (
    ZUTATENID INT NOT NULL UNIQUE,
    KALORIEN_KCAL DECIMAL(10,2),
    PROTEIN_G DECIMAL(10,3),
    KOHLENHYDRATE_G DECIMAL(10,3),
    ZUCKER_G DECIMAL(10,3),
    FETT_G DECIMAL(10,3),
    GESAETTIGTE_FETTSAUREN_G DECIMAL(10,3),
    BALLASTSTOFFE_G DECIMAL(10,3),
    NATRIUM_G DECIMAL(10,3),
    FOREIGN KEY (ZUTATENID) REFERENCES ZUTAT(ZUTATENID) ON DELETE CASCADE
);

CREATE TABLE REZEPT_ZUTAT (
    REZEPTID INT NOT NULL,
    ZUTATENID INT NOT NULL,
    ZUTATENMENGE INT NOT NULL,
    PRIMARY KEY (REZEPTID, ZUTATENID),
    FOREIGN KEY (REZEPTID) REFERENCES REZEPT(REZEPTID) ON DELETE CASCADE,
    FOREIGN KEY (ZUTATENID) REFERENCES ZUTAT(ZUTATENID) ON DELETE RESTRICT
);

CREATE TABLE BESTELLUNG (
    BESTELLNR INT PRIMARY KEY,
    KUNDENID INT NOT NULL,
    STORNIERT BOOLEAN,
    VERSANDNR INT,
    RECHNUNGSNR INT,
    FOREIGN KEY (KUNDENID) REFERENCES KUNDE(KUNDENID) ON DELETE RESTRICT,
    FOREIGN KEY (VERSANDNR) REFERENCES VERSANDINF(VERSANDNR) ON DELETE RESTRICT,
    FOREIGN KEY (RECHNUNGSNR) REFERENCES RECHNUNG(RECHNUNGSNR) ON DELETE RESTRICT,
);

CREATE TABLE BESTELLUNG_REZEPT (
    BESTELLNR INT NOT NULL,
    REZEPTID INT NOT NULL,
    PRIMARY KEY (REZEPTID, BESTELLNR),
    FOREIGN KEY (REZEPTID) REFERENCES REZEPT(REZEPTID) ON DELETE RESTRICT,
    FOREIGN KEY (BESTELLNR) REFERENCES BESTELLUNG(BESTELLNR) ON DELETE CASCADE
)

CREATE TABLE BESTELLUNG_ZUTAT (
    BESTELLNR INT NOT NULL,
    ZUTATENID INT NOT NULL,
    PRIMARY KEY (ZUTATENID, BESTELLNR),
    FOREIGN KEY (ZUTATENID) REFERENCES ZUTAT(ZUTATENID) ON DELETE RESTRICT,
    FOREIGN KEY (BESTELLNR) REFERENCES BESTELLUNG(BESTELLNR) ON DELETE CASCADE
)

CREATE TABLE VERSANDINF (
    VERSANDNR INT PRIMARY KEY,
    VERSANDDIENST VARCHAR(150) NOT NULL,
    VERSANDDATUM DATE,
    UEBERGABEDATUM DATE
);

CREATE TABLE RECHNUNG (
    RECHNUNGSNR INT PRIMARY KEY,
    GESAMTPREIS DECIMAL(10, 2),
    RECHNUNGSDATUM DATE,
    RECHNUNGSFRIST DATE,
    BEZAHLT BOOLEAN
);

CREATE TABLE ALLERGEN (
    ALLERGENID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(50) UNIQUE
);

CREATE TABLE ZUTAT_ALLERGEN (
   ZUTATENID INT NOT NULL,
   ALLERGENID INT NOT NULL,
   PRIMARY KEY (ZUTATENID, ALLERGENID),
   FOREIGN KEY (REZEPTID) REFERENCES REZEPT(REZEPTID) ON DELETE CASCADE,
   FOREIGN KEY (ALLERGENID) REFERENCES ALLERGEN(ALLERGENID) ON DELETE RESTRICT
); 

CREATE TABLE LIEFERANT (
    LIEFERANTENID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(150) UNIQUE
    ADRESSENID INT NOT NULL,
    FOREIGN KEY (ADRESSENID) REFERENCES ADRESSE(ADRESSENID) ON DELETE RESTRICT
);

CREATE TABLE ADRESSE (
    ADRESSENID INT AUTO_INCREMENT PRIMARY KEY,
    STADT VARCHAR(50),
    PLZ VARCHAR(10),
    STRASSE VARCHAR(30),
    HAUSNR INT
);

CREATE TABLE KUNDE (
    KUNDENID INT AUTO_INCREMENT PRIMARY KEY,
    PERSOENLINFID INT NOT NULL,
    ADRESSENID INT NOT NULL,
    KONTOID INT NOT NULL,
    FOREIGN KEY PERSOENLINFID REFERENCES PERSOENLINF(PERSOENLINFID) ON DELETE RESTRICT,
    FOREIGN KEY KONTOID REFERENCES KONTO(KONTOID) ON DELETE RESTRICT,
    FOREIGN KEY ADRESSENID REFERENCES ADRESSE(ADRESSENID) ON DELETE RESTRICT
);

CREATE TABLE KONTO (
    KONTOID INT PRIMARY KEY,
    KUNDENID INT NOT NULL,
    EMAIL VARCHAR(150) UNIQUE NOT NULL,
    PASSWORT VARCHAR(255) NOT NULL,
    AKTIV BOOLEAN DEFAULT FALSE,
    LETZTE_ANMELDUNG TIMESTAMP NULL,
    ERSTELLUNGS_DATUM TIMESTAMP NOT NULL
);

CREATE TABLE PERSOENLINF (
    PERSOENLINFID INT AUTO_INCREMENT PRIMARY KEY,
    VORNAME VARCHAR(100),
    NACHNAME VARCHAR(100)
)

CREATE TABLE KUNDE_ALLERGEN (
    KUNDENID INT NOT NULL,
    ALLERGENID INT NOT NULL,
    PRIMARY KEY (KUNDENID, ALLERGENID),
    FOREIGN KEY (KUNDENID) REFERENCES KUNDE(KUNDENID) ON DELETE CASCADE,
    FOREIGN KEY (ALLERGENID) REFERENCES ALLERGEN(ALLERGENID) ON DELETE RESTRICT
);

CREATE TABLE ROLLE (
    ROLLEID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(50) UNIQUE
);

CREATE TABLE MITARBEITER (
    MITARBEITERID INT AUTO_INCREMENT PRIMARY KEY,
    PERSOENLINFID INT NOT NULL,
    ADRESSENID INT NOT NULL,
    KONTOID INT NOT NULL,
    FOREIGN KEY KONTOID REFERENCES KONTO(KONTOID) ON DELETE RESTRICT,
    FOREIGN KEY PERSOENLINFID REFERENCES PERSOENLINF(PERSOENLINFID) ON DELETE RESTRICT,
    FOREIGN KEY ADRESSENID REFERENCES ADRESSE(ADRESSENID) ON DELETE RESTRICT
);

CREATE TABLE MITARBEITER_ROLLE (
    MITARBEITERID INT NOT NULL,
    ROLLEID INT NOT NULL,
    PRIMARY KEY (ROLLEID, MITARBEITERID),
    FOREIGN KEY (ROLLEID) REFERENCES ROLLE(ROLLEID) ON DELETE CASCADE,
    FOREIGN KEY (MITARBEITERID) REFERENCES MITARBEITER(MITARBEITERID) ON DELETE CASCADE
);

CREATE TABLE LOG (
    LOGID INT AUTO_INCREMENT PRIMARY KEY,
    MITARBEITERID INT,
    AKTION VARCHAR(100),
    ZIELTABELLE VARCHAR(100),
    ZIELID VARCHAR(100),
    TIMESTAMP DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (MITARBEITERID) REFERENCES MITARBEITER(MITARBEITERID)
);